//-----------------------------------------------------------------------------
// Project: Letter Analyzer
// File:    dictionary.h
//                                    Заголовочный файл классов слова и словаря
//-----------------------------------------------------------------------------
#include <iostream>
#include <string>
using namespace std;
//-----------------------------------------------------------------------------
#define FIRST_LOWER_SYM ('a')   // Первый символ алфавита    ( нижний регистр)
#define LAST_LOWER_SYM  ('z')   // Последний символ алфавита ( нижний регистр)
#define FIRST_UPPER_SYM ('A')   // Первый символ алфавита    (верхний регистр)
#define LAST_UPPER_SYM  ('Z')   // Последний символ алфавита (верхний регистр)
//-----------------------------------------------------------------------------
#define ERR_WORD ""                             // Слово по-умолчанию при сбое
#define ALPHA (LAST_LOWER_SYM-FIRST_LOWER_SYM)  // Кол-во символов алфавита
//-----------------------------------------------------------------------------
#define DEBUG_CRIT true   // Выводить (да/нет) критические отладочные сообщения
#define DEBUG_WARN true   // Выводить (да/нет) сообщения об обработанных сбоях
#define DEBUG_NORM true   // Выводить (да/нет) сообщения о успешных операциях
//-----------------------------------------------------------------------------
void showMsg(int type, string msg, ostream &out = cout);
//-----------------------------------------------------------------------------
class Word
{
 private:
	 string str;           // Изначальное состояние слова
	 size_t count[ALPHA];  // Кол-во здаействованнных букв алфавита
 public:
	 Word(const string s); // Конструктор, заполняет объект данными
	 size_t size();        // Возвращает длину слова
	 size_t *cmp();        // Возвращает указатель на count (для сравнения)
	 string gets();        // Возвращает слово в изначальном состоянии
	 //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	 void print(ostream &out = cout); // Распечатать вектор букв в поток out
};
//-----------------------------------------------------------------------------